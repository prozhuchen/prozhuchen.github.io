<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[朱琛的小屋]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://prozhuchen.github.io/"/>
  <updated>2015-10-04T06:58:36.373Z</updated>
  <id>http://prozhuchen.github.io/</id>
  
  <author>
    <name><![CDATA[朱琛]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hexo博客第九又四分之三站：剩下的小东西]]></title>
    <link href="http://prozhuchen.github.io/2015/10/04/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B9%9D%E5%8F%88%E5%9B%9B%E5%88%86%E4%B9%8B%E4%B8%89%E7%AB%99/"/>
    <id>http://prozhuchen.github.io/2015/10/04/Hexo博客第九又四分之三站/</id>
    <published>2015-10-04T06:55:10.000Z</published>
    <updated>2015-10-04T06:58:36.373Z</updated>
    <content type="html"><![CDATA[<p>最后看了看还是有点小东西没说，但是前面都已经写完结尾了啊啊啊，所以在此补了个九又四分之三站(不知道深意的请百度哈利波特站台….)，有缘分的小伙伴进来看一看有木有你能用上的。</p>
<h1 id="Hexo_+_README">Hexo + README</h1><p>每次进入GitHub的gh-pages分支都提醒写README，烦死了，我们在根目录下的<code>source</code>下面新建一个README文件，写上对自己博客的描述啥的，再次生成部署就会发现README已经传上去了。</p>
<h1 id="Hexo_+_404">Hexo + 404</h1><p>GitHub本身给我们配置了404页面，如果是做自己的404页面，你可以像上面一样，在<code>source</code>里面加上404.html，但是注意，自定义的404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用hexo server在本机调试也是不起作用的。例如，如果一开始你的域名是XXX.github.io,你就可以在XXX.github.io/404.html看到你的404页面，但是如果你的域名是XXX.github.io/blog，那么你就无法看到自己的404了。<br>现如今，很多人都把自己的404页面当做公益项目的传播，为社会做点自己的贡献，例如这样子：<a href="http://prozhuchen.github.io/404.html">404页面</a>。下面是几个公益404的地址。</p>
<ul>
<li><a href="http://www.qq.com/404/" target="_blank" rel="external">腾讯公益404</a></li>
<li><a href="http://yibo.iyiyun.com/Index/web404" target="_blank" rel="external">404公益_益云(公益互联网)社会创新中心</a></li>
<li><a href="http://404page.missingkids.org.tw/" target="_blank" rel="external">失蹤兒童少年資料管理中心404</a></li>
</ul>
<h1 id="hexo_+_图床">hexo + 图床</h1><p>我们的博客部署在GitHub上虽然有很多好处，但是有一个问题，他的个人空间只有100M！如果光是普通文件也就差不多够了，但是有图片可怎么办呐。所以我们可以把图片放在图床上，然后用外链地址来引用图片，问题解决。<br>我用的图床是七牛，他的体验用户是1G，标准用户是10G，而且免费的，应该够绝大多数个人博客的使用了。这里是七牛的地址 <a href="https://portal.qiniu.com/signup?code=3lpoc69h8k502" target="_blank" rel="external">七牛</a>。这里说一下七牛的简单使用。<br>我们首先注册（想成为标准用户得通过个人验证），完成后新建一个空间，名字任意。<br>此时我们进入空间，选择内容管理，然后上传图片，点击该图片后右边会出现图片的缩略图和外链地址，我们复制该外链地址，即图片的访问地址到自己的文章里，就可以看到图片啦。</p>
<h1 id="hexo_+_社交连接，友情链接">hexo + 社交连接，友情链接</h1><p>我们在站点配置文件中，加入如下的语句，随便加，别客气！</p>
<pre><code><span class="comment"># 社交链接，将在侧栏中显示</span>
<span class="symbol">social:</span>
  知乎<span class="symbol">:</span> <span class="symbol">http:</span>/<span class="regexp">/www.zhihu.com/people</span><span class="regexp">/zhu-chen-71-40
  GitHub: https:/</span><span class="regexp">/github.com/prozhuchen</span>
  <span class="comment"># Twitter: your-twitter-url</span>
  <span class="comment"># Weibo: your-weibo-url</span>
  <span class="comment"># DouBan: your-douban-url</span>
  <span class="comment"># ZhiHu: your-zhihu-url</span>
  <span class="comment"># 等等</span>

<span class="comment">#友情链接，将在侧栏中显示</span>
<span class="symbol">links_title:</span> 友情链接
<span class="symbol">links:</span>
  我的<span class="constant">CSDN</span>博客<span class="symbol">:</span> <span class="symbol">http:</span>/<span class="regexp">/blog.csdn.net/u</span>010006643
</code></pre><h1 id="结束啦">结束啦</h1><p>首先感谢网上大神们的博客，很牛，也解决了自己的很多问题，可惜好多博文没有记住…..如果您发现了我引用了你的博客，而且需要我进行说明，我将会尽快说明，在此感谢大神们博客的帮助。<br>经过这几天的整理，总算把自己挖空了。请小伙伴们如果发现错误在下面留言告诉我，我将不胜感激。有疑问的话我也会尽力给大家解决。希望大家能愉快的交流与学习&lt;(￣ˇ￣)/。</p>
]]></content>
    <summary type="html">
    <![CDATA[README + 404页面 + 图床 + 社交与友情链接]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[各种排序代码集合笔记]]></title>
    <link href="http://prozhuchen.github.io/2015/10/03/%E5%8E%9F-%E5%90%84%E7%A7%8D%E6%8E%92%E5%BA%8F%E4%BB%A3%E7%A0%81%E9%9B%86%E5%90%88%E7%AC%94%E8%AE%B0/"/>
    <id>http://prozhuchen.github.io/2015/10/03/原-各种排序代码集合笔记/</id>
    <published>2015-10-03T08:38:11.000Z</published>
    <updated>2015-10-04T08:20:29.363Z</updated>
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//直接插入排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(<span class="keyword">int</span> *datatemp,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> *data = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		data[i]=datatemp[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> temp,j;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line">		temp = data[i];</span><br><span class="line">		<span class="keyword">if</span>(data[i]&lt;data[i-<span class="number">1</span>])&#123;</span><br><span class="line">			j = i-<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">while</span>(data[j]&gt;temp)&#123;</span><br><span class="line">				data[j+<span class="number">1</span>]=data[j];</span><br><span class="line">				j--;</span><br><span class="line">			&#125;</span><br><span class="line">			data[j+<span class="number">1</span>]=temp;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输出</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"直接插入排序:\t"</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d  "</span>,data[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//希尔排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellSort</span><span class="params">(<span class="keyword">int</span> *datatemp,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> *data = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		data[i]=datatemp[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> dk = n/<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">while</span>(dk&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="comment">//插入排序了下面是</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=dk;i&lt;n;i+=dk)&#123;</span><br><span class="line">			<span class="keyword">int</span> temp = data[i];</span><br><span class="line">			<span class="keyword">if</span>(data[i]&lt;data[i-dk])&#123;</span><br><span class="line">				<span class="keyword">int</span> j = i-dk;</span><br><span class="line">				<span class="keyword">while</span>(data[j]&gt;temp)&#123;</span><br><span class="line">					data[j+dk]=data[j];</span><br><span class="line">					j-=dk;</span><br><span class="line">				&#125;</span><br><span class="line">				data[j+dk]=temp;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		dk/=<span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输出</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"希尔排序:\t"</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d  "</span>,data[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//快速排序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">QsortThird</span><span class="params">(<span class="keyword">int</span> low,<span class="keyword">int</span> high ,<span class="keyword">int</span> *data)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp = data[low];</span><br><span class="line">	<span class="keyword">while</span>(low&lt;high)&#123;</span><br><span class="line">		<span class="keyword">while</span>(low&lt;high &amp;&amp; data[high]&gt;=temp)high--;</span><br><span class="line">		data[low]=data[high];</span><br><span class="line">		<span class="keyword">while</span>(data[low]&lt;=temp &amp;&amp; low&lt;high) low++;</span><br><span class="line">		data[high]=data[low];</span><br><span class="line">	&#125;</span><br><span class="line">	data[low]=temp;</span><br><span class="line">	<span class="keyword">return</span> low;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QsortSecond</span><span class="params">(<span class="keyword">int</span> low,<span class="keyword">int</span> high ,<span class="keyword">int</span> *data)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(low&lt;high)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid = QsortThird(low,high,data);</span><br><span class="line">		QsortSecond(low,mid-<span class="number">1</span>,data);</span><br><span class="line">		QsortSecond(mid+<span class="number">1</span>,high,data);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QsortFrist</span><span class="params">(<span class="keyword">int</span> *datatemp,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> *data = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		data[i]=datatemp[i];</span><br><span class="line">	&#125;</span><br><span class="line">	QsortSecond(<span class="number">1</span>,n-<span class="number">1</span>,data);</span><br><span class="line">	<span class="comment">//输出</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"快速排序:\t"</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d  "</span>,data[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//归并排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> *A,<span class="keyword">int</span> low,<span class="keyword">int</span> mid,<span class="keyword">int</span> high,<span class="keyword">int</span> *B)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=low,m=mid,y=mid+<span class="number">1</span>,n=high;</span><br><span class="line">	<span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(x&lt;=m &amp;&amp; y&lt;=n)&#123;</span><br><span class="line">		  <span class="keyword">if</span> (A[x] &lt;= A[y]) B[k++]=A[x++];</span><br><span class="line">		  <span class="keyword">else</span> B[k++]=A[y++];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(x&lt;=m)&#123;</span><br><span class="line">		B[k++]=A[x++];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(y&lt;=n)&#123;</span><br><span class="line">		B[k++]=A[y++];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//把已经有序的序列再返回</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)  </span><br><span class="line">        A[low+i] = B[i];  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeSortSecond</span><span class="params">(<span class="keyword">int</span> *A,<span class="keyword">int</span> low,<span class="keyword">int</span> high,<span class="keyword">int</span> *B)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(low&lt;high)&#123;</span><br><span class="line">			<span class="keyword">int</span> mid = (low+high)/<span class="number">2</span>;</span><br><span class="line">			MergeSortSecond(A,low,mid,B);</span><br><span class="line">			MergeSortSecond(A,mid+<span class="number">1</span>,high,B);</span><br><span class="line">			Merge(A,low, mid, high, B); </span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeSortFirst</span><span class="params">(<span class="keyword">int</span> *datatemp,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> *data = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		data[i]=datatemp[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> *datatmp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">	MergeSortSecond(data,<span class="number">1</span>,n-<span class="number">1</span>,datatmp);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//输出</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"归并排序:\t"</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d  "</span>,data[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//堆排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HeapSort</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> data[<span class="number">8</span>]=&#123;<span class="number">0</span>,<span class="number">49</span>,<span class="number">38</span>,<span class="number">65</span>,<span class="number">97</span>,<span class="number">76</span>,<span class="number">13</span>,<span class="number">27</span>&#125;;<span class="comment">//后七个数是数据，第一个是哨兵，这里为了做例子才这么写</span></span><br><span class="line">	<span class="comment">//输出</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"原始数据:\t"</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d  "</span>,data[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">	InsertSort(data,<span class="number">8</span>);</span><br><span class="line">	ShellSort(data,<span class="number">8</span>);</span><br><span class="line">	QsortFrist(data,<span class="number">8</span>);</span><br><span class="line">	MergeSortFirst(data,<span class="number">8</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>还没写完，有空把堆排序补上。</p>
]]></content>
    <summary type="html">
    <![CDATA[各种排序代码集合]]>
    
    </summary>
    
      <category term="算法" scheme="http://prozhuchen.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法" scheme="http://prozhuchen.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客第五站：文章配置+Markdown语法]]></title>
    <link href="http://prozhuchen.github.io/2015/10/03/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%BA%94%E7%AB%99/"/>
    <id>http://prozhuchen.github.io/2015/10/03/Hexo博客第五站/</id>
    <published>2015-10-03T07:53:11.000Z</published>
    <updated>2015-10-04T06:58:56.023Z</updated>
    <content type="html"><![CDATA[<p>现在我们可以尽情写自己想写的东西了。但是首先我们得学会在哪写和怎么写。</p>
<h1 id="在哪写(Hexo_文章配置)">在哪写(Hexo 文章配置)</h1><h2 id="从别处迁移">从别处迁移</h2><p>如果我们之前在别的网站已经有了自己的博客，那当然不能直接扔掉啦，Hexo可以从RSS/Jekyll/Octopress/Wordpress迁移之前的博客（传送门 <a href="http://zespia.tw/hexo/docs/migration.html" target="_blank" rel="external">从别处迁移到Hexo</a>）。</p>
<h2 id="自己写">自己写</h2><p>首先我们在Git Bash中输入：</p>
<pre><code>hexo <span class="keyword">new</span> <span class="string">"article name"</span>
</code></pre><p>然后我们在博客根目录<code>/source/_posts</code>下会看见新产生的<code>article name.md</code>。<br>如果我们想改变这个名字的格式，就可以在站点配置文件的31行左右改变<code>new_post_name</code>，下面将名字格式改成了类似这样的<code>2015-09-29-name.md</code>：</p>
<pre><code><span class="comment"># Writing</span>
<span class="symbol">new_post_name:</span> <span class="symbol">:year-</span><span class="symbol">:month-</span><span class="symbol">:day-</span><span class="symbol">:title</span>.md <span class="comment"># File name of new posts</span>
<span class="symbol">default_layout:</span> post
<span class="symbol">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span>
<span class="symbol">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span>
<span class="symbol">filename_case:</span> <span class="number">0</span>
<span class="symbol">render_drafts:</span> <span class="literal">false</span>
</code></pre><p>然后重新生成一篇文章，可以看到产生的是<code>2015-09-29-article name.md</code>吧。</p>
<p>此时我们进入这篇文章，可以看见：</p>
<pre><code>title: q                  //文章的名字
date: 2015-10-03 15:53:11 //你生成这篇文章的时间
<span class="header">tags:                     //文章的标签
---</span>
</code></pre><p>类似这样的开头属性还有：</p>
<pre><code>updated     修改日期        文件的修改日期    
comments    是否开启评论    <span class="function"><span class="title">true</span><span class="params">(默认)</span></span>   
tags        文章标签          
categories  文章分类    
permalink   url中的名字    文件名
description 文章摘要
</code></pre><p>举两个例子：</p>
<pre><code><span class="comment">//这个文章不允许别人评论，默认评论是开启的</span>
title: Hexo博客第二站：部署到GitHub
date: <span class="number">2015</span>-<span class="number">09</span>-<span class="number">28</span> <span class="number">20</span>:<span class="number">29</span>:<span class="number">48</span>
comments: <span class="literal">false</span>

<span class="comment">//这个文章有两个标签，属于两个类别</span>
title: Hexo博客第二站：部署到GitHub
date: <span class="number">2015</span>-<span class="number">09</span>-<span class="number">30</span> <span class="number">15</span>:<span class="number">06</span>:<span class="number">50</span>
tags:
- Hexo
- GitHub
categories:
- Hexo
- GitHub
</code></pre><p>接下来我们就可以在下面写自己的文章啦，但是文章要符合Markdown语法，MarkDown语法是啥子？我们要咋写啊？</p>
<h1 id="怎么写（Markdown）">怎么写（Markdown）</h1><blockquote>
<p>Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。</p>
</blockquote>
<p>网上有很多的Markdown软件，我用的是<a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">作业部落</a>，感觉这个软件做的很不错。其他的也有一些人是用sublime+插件（传送门 <a href="http://www.jianshu.com/p/378338f10263" target="_blank" rel="external">sublime text 2 下的Markdown写作</a>），大家可以自己选择自己想要的。</p>
<p>至于Markdown语法，一开始准备自己写，但是后来发现有好多内容网上已经有了，再写出来会很重复。所以基本语法我就不提了。在这里说一些我在用Markdown时的心得。</p>
<ol>
<li>NexT主题有一个配置选项<code>toc_list_number: true</code>，这个选项使我们的目录会自动配上顺序标号，所以我们在自己写的时候可以不用带上了，如果不习惯的话，把这个配置注释掉即可。</li>
<li><p>在用Markdown写命令的时候，我们将命令缩进四个空格，就会出现下面的情况。</p>
<pre><code>命令
</code></pre></li>
</ol>
<p>绝大部分时候，一个Tab就是四个空格，当然你也可以设置，例如用sublime写作时，你就可以设定一个Tab等于多少空格。</p>
<ol>
<li><p>在用Markdown写代码的时候，我们只要用<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#10;</span><br></pre></td></tr></table></figure></p>
<pre><code><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span>
```
</code></pre></li>
</ol>
<p>Markdown变得越来越流行，他的兼容性和可读性可以胜任各个场合，而且如果伴随着一些专业编辑器，我们的写作速度大大加快了。</p>
<p>从现在开始，大家可以开始自己的博客创作之路了！</p>
]]></content>
    <summary type="html">
    <![CDATA[我们来学习在哪写文章和怎么写文章。]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客第四站：搜索引擎+小插件+配置结构分析]]></title>
    <link href="http://prozhuchen.github.io/2015/10/03/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E5%9B%9B%E7%AB%99/"/>
    <id>http://prozhuchen.github.io/2015/10/03/Hexo博客第四站/</id>
    <published>2015-10-03T06:46:38.000Z</published>
    <updated>2015-10-04T06:58:42.891Z</updated>
    <content type="html"><![CDATA[<p>接着我们上次来继续加加加东西。</p>
<p>此时说明一下，大家可能看到我的博客和你们NexT主题显示的不一样，这是因为NexT主题包含两种主题，我们在主题配置文件中的40行左右可以看见：</p>
<pre><code><span class="preprocessor"># Schemes</span>
<span class="label">scheme:</span> Mist  <span class="preprocessor">#这一列默认是注释掉的，如果把这个取消注释，就会变成我的博客的主题样式。</span>
</code></pre><h1 id="搜索引擎">搜索引擎</h1><p>NexT主题支持了两种搜索引擎：Swiftype和微搜索。一个是国外的，一个是国内的。微搜索做的还不错，但是我搜索的时候总觉得有些延迟；至于Swiftype，真的真的很好用，良心厂家强力推荐。<br>有人说注册以后是30天试用，这个没关系，网站给的是30天高级账户的使用（那种有可以建立多个搜索引擎、多账户共同管理、一个引擎index多个域名的功能的账户），30天到期后你可选择花钱继续用这个高级账户（土豪自便），或者选择降级成为免费的账户类型，也就是我现在用的那种，所以，不用担心。<br>Swiftype网站的配置，网上其他好多的都是说的老版Swiftype的配置，比较落后了，这里提供给大家一位博主的博客，说的很详细。传送门　<a href="http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html" target="_blank" rel="external">利用swiftype为hexo添加站内搜索</a>。<br>至于主题上的配置，我们只要在你的站点配置文件（不是主题配置文件）上加上这样一句话即可。</p>
<pre><code># <span class="keyword">Swiftype </span>Search Key
<span class="keyword">swiftype_key: </span>你的<span class="keyword">swiftype_key</span>
</code></pre><p>swiftype_key：在你Swiftype网站配置完后，我们看到了一个JS文件。</p>
<p><img src="http://7xn5ph.com1.z0.glb.clouddn.com/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E5%9B%9B%E7%AB%991.jpg" alt=""><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">w,d,t,u,n,s,e</span>)</span>&#123;w[<span class="string">'SwiftypeObject'</span>]=n;w[n]=w[n]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  (w[n].q=w[n].q||[]).push(<span class="built_in">arguments</span>);&#125;;s=d.createElement(t);</span><br><span class="line">  e=d.getElementsByTagName(t)[<span class="number">0</span>];s.async=<span class="number">1</span>;s.src=u;e.parentNode.insertBefore(s,e);</span><br><span class="line">  &#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">'script'</span>,<span class="string">'//s.swiftypecdn.com/install/v2/st.js'</span>,<span class="string">'_st'</span>);</span><br><span class="line"></span><br><span class="line">  _st(<span class="string">'install'</span>,<span class="string">'yx9-swpbwqxuFPaTyCzz'</span>,<span class="string">'2.0.0'</span>);<span class="comment">//yx9-swpbwqxuFPaTyCzz 就是 swiftype_key，不同的人不一样。</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h1 id="安装插件RSS与_sitemap">安装插件RSS与 sitemap</h1><p>Sitemap:</p>
<blockquote>
<p>Sitemap 可方便网站管理员通知搜索引擎他们网站上有哪些可供抓取的网页。最简单的 Sitemap 形式，就是XML文件，在其中列出网站中的网址以及关于每个网址的其他元数据（上次更新的时间、更改的频率以及相对于网站上其他网址的重要程度为何等），以便搜索引擎可以更加智能地抓取网站。</p>
</blockquote>
<p>这个Sitemap还是很有用的，例如本来你在google上搜索自己的新帖子是很难搜索到的，但是你向google提交sitemap后，自己的帖子变得容易搜索到多了。</p>
<p>RSS:</p>
<blockquote>
<p>RSS（Really Simple Syndication，简易信息聚合）是一种描述和同步网站内容的格式。你可以认为是一种定制个性化推送信息的服务。它能解决你漫无目的浏览网页的问题。它不会过时，信息越是过剩，它的意义也越加彰显。</p>
</blockquote>
<p>首先我们安装前人写好的插件。</p>
<pre><code>npm <span class="operator"><span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save</span></span>
</code></pre><p>然后在站点配置文件上输入下面的语句：</p>
<pre><code><span class="attribute">plugins</span>:
- hexo-generator-feed
- hexo-generator-sitemap

<span class="attribute">sitemap</span>:
  <span class="attribute">path</span>: sitemap.xml

<span class="attribute">feed</span>:
  <span class="attribute">path</span>: atom.xml
</code></pre><p>上面的path说明了博客生成后的位置在根目录下，也是你访问网址是你的根地址+path。<br>此时你访问<code>http://127.0.0.1:4000/atom.xml</code>就能看到RSS的内容啦，sitemap访问同理。 如果想向google提交自己的sitemap，请看这个博客。传送门 <a href="http://fionat.github.io/blog/2013/10/23/sitemap/" target="_blank" rel="external">如何向google提交sitemap（详细）</a> ，过一天左右，你就能在google搜索到自己的新博客啦。</p>
<hr>
<h1 id="加入”关于我”_和DIY界面">加入”关于我” 和DIY界面</h1><p>一开始我们的主页里面只有主页，归档和标签三个栏目。我们可以加一些自己DIY的界面。<br>我们在Git Bash中输入这样一句命令。</p>
<pre><code>hexo <span class="keyword">new</span> page <span class="string">"about"</span>
</code></pre><p>这时我们进入博客根目录下的<code>source</code>可以发现多了一个<code>about</code>文件夹，里面有一个<code>index.md</code>,此时我们进入主题配置文件（就是在主题目录下的_config.yml），对第五行进行更改。</p>
<pre><code><span class="attribute">menu</span>:
  <span class="attribute">home</span>: /
  #<span class="attribute">categories</span>: /categories
  <span class="attribute">about</span>: /about
  <span class="attribute">archives</span>: /archives
  <span class="attribute">tags</span>: /tags
  #<span class="attribute">commonweal</span>: /<span class="number">404</span>.html
</code></pre><p>此时再重新生成可以看见我们的页面多了一个关于的栏目啦。<br>如果我们想加入一些新的栏目，例如我上面出现的留言呢，可以再次这么敲命令：</p>
<pre><code>hexo <span class="keyword">new</span> page <span class="string">"guestbook"</span>
</code></pre><p>然后在主题配置文件进行更改，加一句 <code>guestbook: guestbook</code>。</p>
<pre><code><span class="attribute">menu</span>:
  <span class="attribute">home</span>: /
  #<span class="attribute">categories</span>: /categories
  <span class="attribute">about</span>: /about
  <span class="attribute">archives</span>: /archives
  <span class="attribute">tags</span>: /tags
  <span class="attribute">guestbook</span>: guestbook
  #<span class="attribute">commonweal</span>: /<span class="number">404</span>.html
</code></pre><p>此时我们重新生成发现页面上多出来的是guestbook，而不是我们想要的留言。这时候我们在<code>/themes/hexo-theme-next/languages/zh-Hans.yml</code>的目录下（这里默认你使用的是简体中文，若是其他语言更改相应的yml就行），在memu下加一句即可。</p>
<pre><code><span class="attribute">guestbook</span>: <span class="string">留言</span>
</code></pre><p>此时再重新生成可以看见我们的页面多了一个留言的栏目啦。如果你想要其他的DIY栏目，勇敢的去做吧！</p>
<hr>
<h1 id="主题配置文件结构分析">主题配置文件结构分析</h1><p>主题配置文件就是在主题目录下的_config.yml，这里对我们常用的配置进行一下讲解。</p>
<pre><code><span class="preprocessor"># when running hexo in a subdirectory (e.g. domain.tld/blog), remove leading slashes ( "/archives" -&gt; "archives" )</span>
menu:                         # 这是你主页最上面出现的栏目
  home: /blog/
  archives: /blog/archives
  categories: /blog/categories
  tags: /blog/tags
  guestbook: /blog/guestbook
  # about: /blog/about
  # commonweal: /blog/<span class="number">404.</span>html

<span class="preprocessor"># Place your favicon.ico to /source directory.</span>
favicon: images/favicon.ico   #这是我们网站的图标

<span class="preprocessor"># Set default keywords (Use a comma to separate)</span>
keywords: <span class="string">"Hexo,next"</span>        

<span class="preprocessor"># Set rss to false to disable feed link.</span>
<span class="preprocessor"># Leave rss as empty to use site's feed link.</span>
<span class="preprocessor"># Set rss to specific value if you have burned your feed already.</span>
rss: /blog/atom.xml           #这是我们RSS的地址

<span class="preprocessor"># Icon fonts</span>
<span class="preprocessor"># Place your font into next/source/fonts, specify directory-name and font-name here</span>
<span class="preprocessor"># Avialable: default | linecons | fifty-shades | feather</span>
<span class="preprocessor">#icon_font: default           #这是我们图标字体的样式</span>
<span class="preprocessor"># icon_font: fifty-shades</span>
icon_font: feather
<span class="preprocessor">#icon_font: linecons</span>

<span class="preprocessor"># Code Highlight theme</span>
<span class="preprocessor"># Available value: normal | night | night eighties | night blue | night bright</span>
<span class="preprocessor"># https://github.com/chriskempson/tomorrow-theme</span>
highlight_theme: night eighties    #这是我们代码高亮的样式，你可以自己改变来看看每一种样式。


<span class="preprocessor"># MathJax Support</span>
mathjax: <span class="literal">true</span>          #显示数学公式的功能，默认是空，如果打开就设为<span class="literal">true</span>



<span class="preprocessor"># Schemes</span>
scheme: Mist    #NexT主题有两种主题，这里默认是注释掉的，取消注释的话就是我博客的样式。


<span class="preprocessor"># Sidebar, available value:</span>
<span class="preprocessor">#  - post    expand on posts automatically. Default.</span>
<span class="preprocessor">#  - always  expand for all pages automatically</span>
<span class="preprocessor">#  - hide    expand only when click on the sidebar toggle icon.</span>
sidebar: post     #这个是侧边栏的显示模式，默认是在阅读帖子的时候自动打开。
<span class="preprocessor">#sidebar: always</span>
<span class="preprocessor">#sidebar: hide</span>


<span class="preprocessor"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span>
scroll_to_more: <span class="literal">true</span>    #启动摘取一部分作为摘要，剩余的在阅读全文里。


<span class="preprocessor"># Automatically add list number to toc.</span>
toc_list_number: <span class="literal">true</span>   #自动在目录里加入列表数字
</code></pre><p>到现在基本的东西我们都算是有啦，现在可以准备开始写博客了。</p>
]]></content>
    <summary type="html">
    <![CDATA[接着我们上次来继续加加加东西。]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客第三站：安装主题+第三方评论+网站统计]]></title>
    <link href="http://prozhuchen.github.io/2015/10/01/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%89%E7%AB%99/"/>
    <id>http://prozhuchen.github.io/2015/10/01/Hexo博客第三站/</id>
    <published>2015-10-01T15:14:50.000Z</published>
    <updated>2015-10-04T08:24:27.831Z</updated>
    <content type="html"><![CDATA[<p>接着我们开始丰富我们的博客。<a id="more"></a></p>
<p>再次提示：</p>
<ol>
<li>下面输入的命令都在 Git Bash 中输入。</li>
<li>下文提到的目录地址都是面对NexT主题的，不过其他主题的索引也都大同小异。</li>
</ol>
<h1 id="hexo博客结构">hexo博客结构</h1><p>在这里，我们先来看看hexo自动生成的博客的主要结构。</p>
<pre><code>├─scaffolds      <span class="comment">//每篇帖子模板所在地</span>
├─source         
│  └─_posts      <span class="comment">//这里放着我们写的帖子 里面初始化一篇hello-world.md</span>
└─themes         <span class="comment">//hexo博客主题所在地</span>
    └─landscape  <span class="comment">//初始化主题默认为landscape</span>
├─node_modules   <span class="comment">//hexo的驱动文件所在地</span>
├─_config<span class="class">.yml</span>    <span class="comment">//hexo博客配置文件</span>
</code></pre><p>这些都是我们有可能去改变的。看完了这个，接下来开始让我们的博客变得添砖加瓦吧。</p>
<h1 id="添砖加瓦">添砖加瓦</h1><h2 id="安装主题">安装主题</h2><p>一个好看的主题可以更加吸引读者，但是从头设计主题也太麻烦了吧~，所以Hexo有很多现成的主题。传送门 [ <a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">Hexo主题</a> ]<br>我们利用语句下载下来我们需要的主题。例如我们下载<code>hexo-theme-next</code>这个主题。</p>
<pre><code><span class="variable">$ </span>git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/iissnan</span><span class="regexp">/hexo-theme-next.git themes/hexo</span>-theme-<span class="keyword">next</span>
</code></pre><p>然后进入上面提到的 themes 文件夹下，可以看见出现了hexo-theme-next文件夹。此时我们到博客根目录下的 _config.yml，修改博客所用的主题 (第66行) 。</p>
<pre><code><span class="preprocessor"># Extensions</span>
<span class="preprocessor">## Plugins: http://hexo.io/plugins/</span>
<span class="preprocessor">## Themes: http://hexo.io/themes/</span>
theme: hexo-theme-next
</code></pre><p>改完后，我们在 Git Bash 中输入</p>
<pre><code>hexo <span class="keyword">g</span>
hexo <span class="literal">s</span>
</code></pre><p>进入 [ <a href="http://127.0.0.1:4000/" target="_blank" rel="external">http://127.0.0.1:4000/</a> ] 查看我们的页面，是不是变得高大上多啦。这一章主要是完善博客所必须的一些内容，关于这个主题的小改变请看这里。[哈哈哈哈哈哈哈哈哈哈哈哈哈哈]</p>
<h2 id="第三方评论">第三方评论</h2><p>博客怎么能没有让小伙伴说话的地方呢。因为Hexo博客是静态博客，所以评论系统我们得靠其他的插件了。NexT这个主题支持 Disqus 和多说两种第三方评论插件。我使用的是多说。Disqus的看这里有提到  <a href="http://blog.fens.me/hexo-blog-github/" target="_blank" rel="external">Hexo在github上构建免费的Web应用</a>。</p>
<ol>
<li>进入<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>平台，点击 “ 我要安装 “ 。</li>
<li>配置好自己的站点，注意多说域名这一栏是我们接下来需要的东西。站点地址就是你Hexo博客上传的GitHub页面地址。</li>
<li>在你的站点配置文件 (不是主题配置文件) _config.yml加一行：<code>duoshuo_shortname: 你的多说域名</code> ( 多说域名: 你的多说二级域名去掉 .duoshuo.com 部分 )</li>
<li>再次生成上传 <code>hexo g</code>，<code>hexo d</code> （没有事先部署到GitHub上的看这里  <a href="http://prozhuchen.github.io/blog/2015/09/30/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%BA%8C%E7%AB%99/">Hexo博客第二站：部署到GitHub上</a>）,点击文章hello-world，是不是看见最下方出现了评论系统啦。管理的话进入多说的后台管理就行了。</li>
<li>**有人可能觉得多说的标准css样式不怎么好看。你可以进入后台管理-设置-基本设置-自定义CSS里面编辑自己想要的。我用的是从网上借鉴来，自己改动了一些的。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#ds-reset</span> <span class="class">.ds-avatar</span>,</span><br><span class="line"><span class="id">#ds-recent-visitors</span> <span class="class">.ds-avatar</span><span class="rules">&#123; </span><br><span class="line">  <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">alpha</span>(opacity=<span class="number">0</span>)</span></span>;   <span class="comment">/*设置图片背景透明*/</span></span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span></span>;  </span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="function">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span></span>;  </span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="id">#ds-reset</span> <span class="class">.ds-avatar</span> <span class="tag">img</span>,</span><br><span class="line"><span class="id">#ds-recent-visitors</span> <span class="class">.ds-avatar</span> <span class="tag">img</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">54px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">54px</span></span></span>;     <span class="comment">/*设置图像的长和宽，这里要根据自己的评论框情况更改*/</span></span><br><span class="line">  <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">27px</span></span></span>;     <span class="comment">/*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/</span></span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-border-radius</span>:<span class="value"> <span class="number">27px</span></span></span>;     <span class="comment">/*圆角效果：兼容webkit浏览器*/</span></span><br><span class="line">  <span class="rule"><span class="attribute">-moz-border-radius</span>:<span class="value"> <span class="number">27px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="hexcolor">#3333</span>sf</span></span>;     <span class="comment">/*设置图像阴影效果*/</span></span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-box-shadow</span>:<span class="value"> inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="hexcolor">#3333</span>sf</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-transition</span>:<span class="value"> <span class="number">0.4s</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-transition</span>:<span class="value"> -webkit-transform <span class="number">0.4s</span> ease-out</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">transition</span>:<span class="value"> transform <span class="number">0.4s</span> ease-out</span></span>;     <span class="comment">/*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/</span></span><br><span class="line">  <span class="rule"><span class="attribute">-moz-transition</span>:<span class="value"> -moz-transform <span class="number">0.4s</span> ease-out</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="id">#ds-reset</span> <span class="class">.ds-avatar</span> <span class="rule"><span class="attribute">img</span>:<span class="value">hover,</span><br><span class="line"><span class="hexcolor">#d</span>s-recent-visitors .ds-avatar img:hover &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*设置鼠标悬浮在头像时的CSS样式*/</span>    box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">  <span class="tag">rgba</span>(255, 255, 255, <span class="class">.6</span>), <span class="tag">inset</span> 0 0 20<span class="tag">px</span> <span class="tag">rgba</span>(255, 255, 255, 1);</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">  <span class="tag">rgba</span>(255, 255, 255, <span class="class">.6</span>), <span class="tag">inset</span> 0 0 20<span class="tag">px</span> <span class="tag">rgba</span>(255, 255, 255, 1);</span><br><span class="line">  <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">rotateZ</span>(<span class="number">360deg</span>)</span></span>;     <span class="comment">/*图像旋转360度*/</span></span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">rotateZ</span>(<span class="number">360deg</span>)</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"> <span class="function">rotateZ</span>(<span class="number">360deg</span>)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="id">#ds-recent-visitors</span> <span class="class">.ds-avatar</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*隐藏多说底部版权*/</span></span><br><span class="line"><span class="hexcolor">#d</span>s-thread <span class="hexcolor">#d</span>s-reset .ds-powered-by &#123;</span><br><span class="line">  display: none</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="博客分享">博客分享</h2><p>我们的博客写的好，会有人希望分享给其他人看。NexT主题有两个分享部件：多说分享和JiaThis。多说分享首先必须启用了多说才能使用。我们在站点配置文件下加上如下的语句，如果你想开启多说分享服务，把jiathis注释掉，取消duoshuo_share的注释就行啦。</p>
<pre><code><span class="preprocessor"># JiaThis 分享服务</span>
jiathis: <span class="literal">true</span>

<span class="preprocessor"># 多说热评文章服务</span>
duoshuo_hotartical: <span class="literal">true</span>

<span class="preprocessor"># # 多说 分享服务（必须启用多说）</span>
<span class="preprocessor"># duoshuo_share: true</span>
</code></pre><h2 id="网站统计">网站统计</h2><p>其实我觉得google，百度统计这些对于许多人用不太上，毕竟不能直接观察到自己的博客有多少人看了什么的。如果需要安装的看这里&gt;<a href="https://github.com/iissnan/hexo-theme-next/wiki/%E6%B7%BB%E5%8A%A0-Google---%E7%99%BE%E5%BA%A6-%E7%BB%9F%E8%AE%A1" target="_blank" rel="external">添加 Google, 百度统计</a>。这里推荐一个小插件-<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子</a>。这个小插件可以让你轻而易举的看见自己的博客火热程度，例如访问量和访问人数等。<br><img src="http://7xn5ph.com1.z0.glb.clouddn.com/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%89%E7%AB%991.jpg" alt=""><br>有一个好玩的小地方，你为了想看到每一篇文章的阅读量，你可以在<code>/themes/hexo-theme-next/layout/_macro/post.swig</code>里面的下面的位置加上如下代码，(这个热度是从一个博客上看到的，感觉很有趣哈):<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">if</span> post.categories and post.categories.length %&#125;</span><span class="xml"></span><br><span class="line">         <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"post-category"</span> &gt;</span></span><br><span class="line">    </span><br><span class="line">         <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">       </span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span><br><span class="line">       </span><br><span class="line">  <span class="comment">&lt;!-- 在下面的位置加上如下代码 --&gt;</span></span><br><span class="line">  </span><br><span class="line">       <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_container_page_pv"</span>&gt;</span></span><br><span class="line">       &amp;nbsp; | &amp;nbsp; 热度&amp;nbsp; <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_page_pv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>°C</span><br><span class="line">       <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">   <span class="comment">&lt;!-- 在上面的位置加上如上代码 --&gt;</span>    </span><br><span class="line">   </span><br><span class="line">       </span><span class="template_tag">&#123;% <span class="keyword">if</span> post.comments %&#125;</span><span class="xml"></span><br><span class="line">         </span><span class="template_tag">&#123;% <span class="keyword">if</span> (theme.duoshuo and theme.duoshuo.shortname) or theme.duoshuo_shortname %&#125;</span><span class="xml"></span><br><span class="line">           <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"post-comments-count"</span>&gt;</span></span><br><span class="line">             &amp;nbsp; | &amp;nbsp;</span><br><span class="line">             <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"</span></span></span><span class="variable">&#123;&#123; url_for(post.path) &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">#comments"</span> <span class="attribute">itemprop</span>=<span class="value">"discussionUrl"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"post-comments-count ds-thread-count"</span> <span class="attribute">data-thread-key</span>=<span class="value">"</span></span></span><span class="variable">&#123;&#123; post.path &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">"</span> <span class="attribute">itemprop</span>=<span class="value">"commentsCount"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p><img src="http://7xn5ph.com1.z0.glb.clouddn.com/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%89%E7%AB%992.jpg" alt=""></p>
<p>但是这有一个缺陷。就是我们会发现在主页时显示的热度和进入博客后的热度不一样，那是因为在主页时他显示的是主页这个页面的阅读量，而不是博客的阅读量，所以我们需要改变一些 (不会该代码的哭死╥﹏╥… )：<br>我们在<code>/themes/hexo-theme-next/layout/_macro/</code>目录下新建<code>post-article.swig</code>,把这些<code>post.swig</code>中的内容复制过去，而且加上上面的统计代码，然后在<code>/themes/hexo-theme-next/layout/post.swig</code>上面<code>% import &#39;_macro/post.swig&#39; as post_template %</code>中的<code>post.swig</code>改成<code>post-article.swig</code>，这样子就解决啦。就是在主页上的博客名字下面不会有阅读人数，进入博客才能看见。<br>为了给大家尽量详细的说明，不知不觉发现这篇文章写得好长^O^ ，下次接着写。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>接着我们开始丰富我们的博客。]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客第二站：部署到GitHub]]></title>
    <link href="http://prozhuchen.github.io/2015/09/30/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%BA%8C%E7%AB%99/"/>
    <id>http://prozhuchen.github.io/2015/09/30/Hexo博客第二站/</id>
    <published>2015-09-30T07:06:50.000Z</published>
    <updated>2015-10-04T06:59:04.871Z</updated>
    <content type="html"><![CDATA[<p>我们开始把Hexo博客部署在GitHub上。<a id="more"></a></p>
<p>首先声明一点，作为一个静态博客，Hexo不止能部署在Git上，只要支持Web访问的空间都可以存放Hexo静态博客。不过GitHub作为一个程序员聚居地，年轻的我们也需要靠近组织嘛。<br>在这里我们假设小伙伴都已经有了一个GitHub账号，并且有了一个GitHub博客。如果没有做的请看这里  &gt; <a href="http://blog.csdn.net/renfufei/article/details/37725057/" target="_blank" rel="external">GitHub博客搭建</a>。</p>
<p>注意：下面的命令在Git Bash上运行。</p>
<h1 id="GitHub生成_SSH_key">GitHub生成 SSH key</h1><h2 id="生成_SSH_key">生成 SSH key</h2><p>作为第一步，首先得让我们的电脑连上GitHub。<br>输入<code>ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</code>,接下来就是不断的敲回车就可以啦。</p>
<pre><code>ssh-keygen -t rsa -b <span class="number">4096</span> -C <span class="string">"your_email@example.com"</span>
<span class="comment"># Creates a new ssh key, using the provided email as a label</span>
Generating public/<span class="keyword">private</span> rsa key pair.
Enter <span class="built_in">file</span> <span class="operator">in</span> which <span class="built_in">to</span> save <span class="operator">the</span> key (/Users/you/.ssh/id_rsa): [Press enter]
Enter passphrase (<span class="constant">empty</span> <span class="keyword">for</span> no passphrase): [Type <span class="operator">a</span> passphrase]
Enter same passphrase again: [Type passphrase again]
Your identification has been saved <span class="operator">in</span> /Users/you/.ssh/id_rsa.
Your public key has been saved <span class="operator">in</span> /Users/you/.ssh/id_rsa.pub.
The key fingerprint is:
<span class="number">01</span>:<span class="number">0</span>f:f4:<span class="number">3</span>b:ca:<span class="number">85</span>:d6:<span class="number">17</span>:a1:<span class="number">7</span>d:f0:<span class="number">68</span>:<span class="number">9</span>d:f0:a2:db your_email@example.com
</code></pre><p>此时在你电脑的 <code>C:\Users\用户名\.ssh\</code>这个目录下就可以找到我们需要的SSH key - id_rsa.pub了。<br>此时在你的GitHub的settings里找到SSH keys，把id_rsa.pub里面的东西添加到Add an SSH key的key里面。<br><img src="http://7xn5ph.com1.z0.glb.clouddn.com/GitHub+Hexo静态博客第二站1.jpg" alt=""><br>然后在Git Bash里面输入<code>ssh -T git@github.com</code>:</p>
<pre><code>$ ssh -T git@github.com
Hi prozhuchen! You've successfully authenticated, <span class="keyword">but</span> GitHub <span class="keyword">does</span> <span class="keyword">not</span> provide shell access.
</code></pre><p>第一步成功！</p>
<h2 id="输入ssh_-T_git@github-com_时出现的错误">输入<code>ssh -T git@github.com</code> 时出现的错误</h2><ol>
<li>输入<code>ssh -T git@github.com</code>出现<code>Permission denied (publickey)</code><br>借鉴这篇博文 <a href="http://blog.csdn.net/sunnypotter/article/details/18948053" target="_blank" rel="external">git连接github失败的问题</a>。</li>
<li>出现<code>ssh:connect tohost github.com port22:Bad file number</code><br>可以看出是端口出现了问题，22是默认的ssh端口，但一般好像是关上的，所以我们改掉端口。<br>我们在SSH key的目录下(一般是<code>C:\Users\用户名\.ssh\</code>)新建一个config文件，内容是：</li>
</ol>
<pre><code>    Host github<span class="class">.com</span>  
    User fulinux@sina<span class="class">.com</span>  
    Hostname ssh<span class="class">.github</span><span class="class">.com</span>  
    PreferredAuthentications publickey  
    IdentityFile~/.ssh/id_rsa  
    Port443  

在此尝试连接，应该可以了。
</code></pre><h1 id="Hexo部署到GitHub上">Hexo部署到GitHub上</h1><h2 id="Hexo部署">Hexo部署</h2><p>我们首先进入到Hexo的站点配置文件_config.yml，修改Deployment部分。</p>
<pre><code><span class="preprocessor"># Deployment</span>
<span class="preprocessor">## Docs: http://hexo.io/docs/deployment.html</span>
<span class="title">deploy</span>:
  <span class="typedef"><span class="keyword">type</span>: git</span>
  repo: git@github.com:prozhuchen/blog.git
  branch: gh-pages
</code></pre><p>这里的repo是你的GitHub博客的SSH地址,branch是你想部署在该仓库的分支。如果不知道自己博客的SSH地址的小伙伴看这里：<br><img src="http://7xn5ph.com1.z0.glb.clouddn.com/GitHub+Hexo静态博客第二站2.jpg" alt=""><br>当然了，你首先得点击<code>clone with HTTPS,SSH;</code>里面的SSH，然后框框里的就是你博客的SSH地址了。<br>然后输入：</p>
<pre><code>hexo <span class="keyword">g</span>
hexo <span class="literal">d</span>
</code></pre><p>可以看见：</p>
<pre><code>$ hexo d
INFO  Deploying: git
INFO  Clearing .deploy <span class="built_in">folder</span>...
INFO  Copying <span class="built_in">files</span> <span class="built_in">from</span> public <span class="built_in">folder</span>...
.....
Branch master <span class="built_in">set</span> up <span class="built_in">to</span> track remote branch gh-pages <span class="built_in">from</span> git@github.com:prozhuchen/blog.git.
Everything up-<span class="built_in">to</span>-<span class="built_in">date</span>
INFO  Deploy done: git
</code></pre><p>此时去看你自己的GitHub博客吧~(地址应该是username.github.io或者是.com)。接下来我们来看看如果让我们的博客变得更完美了。</p>
<h2 id="输入hexo_d时出现的问题">输入<code>hexo d</code>时出现的问题</h2><ol>
<li><code>ERROR Deployer not found: git</code><ol>
<li>确定自己安装了hexo-deployer-git。如果没有,在Git Bash上输入：<code>npm install hexo-deployer-git --save</code>。</li>
<li>deploy的type的github需要改成git。</li>
<li>注意_config的配置写法。注意缩进，而且冒号后面要有一个空格。    </li>
</ol>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>我们开始把Hexo博客部署在GitHub上。]]>
    
    </summary>
    
      <category term="GitHub" scheme="http://prozhuchen.github.io/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/categories/Hexo/"/>
    
      <category term="GitHub" scheme="http://prozhuchen.github.io/categories/Hexo/GitHub/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客第一站：搭建本地Hexo静态博客]]></title>
    <link href="http://prozhuchen.github.io/2015/09/30/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AB%99/"/>
    <id>http://prozhuchen.github.io/2015/09/30/Hexo博客第一站/</id>
    <published>2015-09-30T06:06:28.000Z</published>
    <updated>2015-10-04T06:59:09.243Z</updated>
    <content type="html"><![CDATA[<p>首先我们先在本地搭一个静态的hexo博客。<a id="more"></a></p>
<h1 id="Hexo的优势"><strong>Hexo的优势</strong></h1><p>Hexo是一款基于Node.js的静态博客，他的优势在于可以快速的搭建起一个个人博客，并且支持各种评论，分享等插件，最重要的是，它有很多现成的主题，你可以任意选择。</p>
<h1 id="Hexo安装"><strong>Hexo安装</strong></h1><ol>
<li>安装Git. <a href="http://www.git-scm.com/download/" target="_blank" rel="external">Git安装地址</a></li>
<li>安装Node.js.  <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js安装地址</a><br>此时你点击任意文件夹右键，应该有 <code>Git Bash here</code>。进入后输入 <code>node -v</code>和 <code>npm -v</code>，如果显示版本号则安装成功。</li>
<li>安装Hexo.<br>在Git bash中输入 <code>npm install -g hexo</code>。</li>
<li>Hexo初始化。</li>
</ol>
<p>你可以cd到你选择的目录，然后输入</p>
<pre><code>hexo init
npm <span class="keyword">install</span>
</code></pre><p>或者直接输入</p>
<pre><code>hexo init 你选择的目录
npm <span class="keyword">install</span>
</code></pre><p>此时在你选择的目录下,输入 <code>hexo g</code> 和 <code>hexo s</code>。</p>
<pre><code>hexo g  <span class="comment">//生成静态网页</span>
INFO  Files loaded <span class="keyword">in</span> <span class="number">705</span> ms
INFO  Generated: js/script<span class="class">.js</span>
...
INFO  Generated: archives/<span class="number">2015</span>/<span class="number">09</span>/index<span class="class">.html</span>
INFO  Generated: index<span class="class">.html</span>
INFO  <span class="number">28</span> files generated <span class="keyword">in</span> <span class="number">1.95</span> s

hexo s  <span class="comment">//启动服务器</span>
INFO  Hexo is running at http:<span class="comment">//0.0.0.0:4000/. Press Ctrl+C to stop.</span>
</code></pre><p>此时你打开 <a href="http://127.0.0.1:4000/" target="_blank" rel="external">http://127.0.0.1:4000</a> , 就能看到已经生成的Hexo界面啦。</p>
<p><img src="http://7xn5ph.com1.z0.glb.clouddn.com/hexo.jpg" alt=""></p>
<h1 id="Hexo常用命令">Hexo常用命令</h1><p>这里先说一下Hexo常用的命令，接下来的文章也会提醒一些的。</p>
<pre><code><span class="variable">$ </span>hexo new [layout] &lt;title&gt; <span class="comment">#建立新文章，默认在_posts下，layout="draft"时发布的是草稿</span>
<span class="variable">$ </span>hexo publish &lt;filename&gt;   <span class="comment">#将_drafts下的文件放到_posts下，也就是发布草稿</span>
<span class="variable">$ </span>hexo generate             <span class="comment">#生成静态网页</span>
<span class="variable">$ </span>hexo server               <span class="comment">#启动预览服务器，开启-d选项时可以预览草稿</span>
<span class="variable">$ </span>hexo deploy               <span class="comment">#发布到远程服务器，开启--generate选项可以在deploy前自动generate</span>
</code></pre><p>另外这些命令都有简化命令，接下来我使用简化命令多一些。</p>
<pre><code><span class="variable">$ </span>hexo n  <span class="comment"># == hexo new</span>
<span class="variable">$ </span>hexo p  <span class="comment"># == hexo publish </span>
<span class="variable">$ </span>hexo g  <span class="comment"># == hexo generate</span>
<span class="variable">$ </span>hexo s  <span class="comment"># == hexo server</span>
<span class="variable">$ </span>hexo d  <span class="comment"># == hexo deploy</span>
</code></pre><hr>
<h1 id="注意"><strong>注意</strong></h1><p>有的时候输入 <code>hexo init</code>看到了这句话：</p>
<pre><code>-<span class="string">bash:</span> <span class="string">hexo:</span> command not found
</code></pre><p>说明没找到hexo指令，此时我们找到hexo的下载目录，然后在系统变量path添加就可以了。我的目录是在 <code>C:\Users\用户名\AppData\Roaming\npm\node_modules\hexo\bin</code>。大家的应该也在类似位置。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先我们先在本地搭一个静态的hexo博客。]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://prozhuchen.github.io/categories/Hexo/"/>
    
  </entry>
  
</feed>
